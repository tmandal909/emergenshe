import React from "react";

function App() {
  return (
    <Mainlogo11 mainlogo11="mainlogo--1--1@2x.png" />
  return <Text1 spanText="{<>Welcome to <br/></>}" spanText2="EmergenSHE" />;
return (
    <Frame frame="frame@1x.svg" />

 <SocialMobile3 socialMobile3="social-mobile-3@1x.svg" />
  );
}

export default App;


function SocialMobile3(props) {
  const { socialMobile3 } = props;

  return <img className="social-mobile-3" src={socialMobile3} />;
}
  );
}

export default App;

function App() {
  return <HELP help="HELP" />;
}


function HELP(props) {
  const { help } = props;

  return <h1 className="help valign-text-bottom helveticaneue-regular-normal-rose-white-40px">{help}</h1>;
}

function Frame(props) {
  const { frame } = props;

  return <img className="frame" src={frame} />;
} );
}

export default App;


function Rectangle(props) {
  const { rectangle } = props;

  return <img className="rectangle" src={rectangle} />;
}

function Text1(props) {
  const { spanText, spanText2 } = props;

  return (
    <div className="text-1 valign-text-bottom helveticaneue-normal-white-20px">
      <span>
        <span className="span1">{spanText}</span>
        <span className="span2">{spanText2}</span>
      </span>
    </div>

function Mainlogo11(props) {
  const { mainlogo11 } = props;

  return <img className="mainlogo-1-1" src={mainlogo11} />;
.mainlogo-1-1 {
  height: 343px;
  object-fit: cover;
  width: 387px;

  font-family: "Helvetica Neue-Light";
  font-style: normal;
  font-weight: 300;
  src: url("https://fonts.animaapp.com/HelveticaNeue-Light") format("truetype");
}

@font-face {
  font-family: "Helvetica Neue-Regular";
  font-style: normal;
  font-weight: 400;
  src: url("https://fonts.animaapp.com/HelveticaNeue-Regular") format("truetype");
}

@font-face {
  font-family: "Helvetica Neue-Bold";
  font-style: normal;
  font-weight: 700;
  src: url("https://fonts.animaapp.com/HelveticaNeue-Bold") format("truetype");
}

.helveticaneue-normal-white-20px {
  color: white;
  font-family: "Helvetica Neue", Helvetica, Arial, serif;
  font-size: 20px;
}
.span1 {
  color: rgba(255, 255, 255, 1);
  font-family: "Helvetica Neue-Regular", Helvetica, Arial, serif;
  font-size: 20px;
  letter-spacing: 0px;
}
.span2 {
  color: rgba(255, 255, 255, 1);
  font-family: "Helvetica Neue-Bold", Helvetica, Arial, serif;
  font-size: 40px;
  font-weight: 700;
  letter-spacing: 0px;
}
.text-1 {
  height: 110px;
  min-height: 110px;
  width: 260px;
}
.valign-text-bottom {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

.social-mobile-3 {
  height: 687px;
  width: 468px;
}}

.frame {
  height: 667px;
  width: 375px;


.rectangle {
  height: 890px;
  object-fit: cover;
  width: 669px;
}
}

Twilio.Conversations.Client.create( token ).then( function( client ) {
    client.on( 'connectionStateChanged', function( state ) {
        if ( state == 'connected' ) {
            console.log('sending message');
            client.sendMessage( 'testing 123' );
            console.log('message sent');
        }
    });
);


}
}
}